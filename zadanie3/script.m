% Очистка рабочей области и консоли
clear all; clc;

% Определяем функцию и ее производную
f = @(x) sqrt(x + 1) - 1 ./ x;
f_prime = @(x) 1./(2*sqrt(x+1)) + 1./(x.^2);

% Задаем параметры решения
epsilon = 1e-4;
x0 = 0.6;

% Инициализируем переменные
x_prev = x0;
iter = 0;
difference = 1;

% Печатаем заголовок таблицы
fprintf('Метод Ньютона:\n');
fprintf('№ итерации |    Корень    |   Разность   |  Точность ε\n');
fprintf('-----------|--------------|--------------|-------------\n');

% Главный итерационный цикл
while difference > epsilon
    % Вычисляем новое значение по формуле Ньютона
    x_next = x_prev - f(x_prev) / f_prime(x_prev);

    iter = iter + 1;

    % Вычисляем модуль разности между итерациями
    difference = abs(x_next - x_prev);

    % Выводим результаты текущей итерации в таблицу
    fprintf('%10d | %12.6f | %12.6f | %12.6f\n', iter, x_next, difference, epsilon);

##    % Проверяем критерий остановки
##    if difference <= epsilon
##        break;
##    end

    % Обновляем значение для следующей итерации
    x_prev = x_next;
end
